<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--  配置spring的Ioc,把service对象配置进来-->
    <bean id="accountService" class="com.itzjx.service.impl.AccountServiceImpl"></bean>

    <!--  配置Logger类  -->
    <bean id="logger" class="com.itzjx.utils.Logger"></bean>

    <!--  配置AOP  -->
    <aop:config>
        <!--配置切入点表达式，id属性用于指定表达式的唯一标识;expression指定表达式内容
                此标签写在aop:aspect标签内部，只能当前切面使用
                它还可以写在aop:aspect标签内部,此时就变成了所有切面可用，但必须写在<aop:aspect>标签前面，否则会抛异常
            -->
        <aop:pointcut id="pt1" expression="execution(* com.itzjx.service.impl.*.*(..))"/>
        <!--配置切面-->
        <aop:aspect id="logAdvice" ref="logger">
            <!--配置前置通知:在切入点方法执行之前执行-->
<!--            <aop:before method="beforePrintLog" pointcut-ref="pt1"></aop:before>-->

            <!--配置后置通知:在切入点方法执行之后执行-->
<!--            <aop:after-returning method="afterReturningPrintLog" pointcut-ref="pt1"></aop:after-returning>-->

            <!--配置异常通知:在切入点方法执行异常时执行-->
<!--            <aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="pt1"></aop:after-throwing>-->

            <!--最终通知:无论如何都会执行-->
<!--            <aop:after method="afterPrintLog" pointcut-ref="pt1"></aop:after>-->

            <!--配置环绕通知,详细注释请看Logger类中-->
            <aop:around method="aroundPrintLog" pointcut-ref="pt1"></aop:around>
        </aop:aspect>
    </aop:config>
</beans>